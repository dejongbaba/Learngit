{"version":3,"sources":["webpack:///src/app/shuffler/shuffler.page.html","webpack:///src/app/shuffler/shuffler-routing.module.ts","webpack:///src/app/shuffler/shuffler.module.ts","webpack:///src/app/shuffler/shuffler.page.scss","webpack:///src/app/shuffler/shuffler.page.ts"],"names":["routes","path","component","ShufflerPageRoutingModule","imports","forChild","exports","ShufflerPageModule","declarations","ShufflerPage","navCtrl","items","command","title","description","filteredItems","console","log","event","searchTerm","target","value","tokens","toLowerCase","split","filter","token","trim","length","searchTermRegex","RegExp","join","filteredData","item","searchString","key","hasOwnProperty","toString","match","selector","template"],"mappings":"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","file":"shuffler-shuffler-module-es5.js","sourcesContent":["export default \"<ion-content class=\\\"shuffler\\\">\\n    <ion-row class=\\\"ion-margin-top ion-margin-bottom header-row\\\">\\n        <ion-col class=\\\"ion-margin-top\\\" offsetLg=\\\"3\\\" sizeLg=\\\"6\\\">\\n            <h1 class=\\\"ion-text-center ion-margin-top\\\">Git Commands and cheatsheet</h1>\\n            <ion-searchbar autocomplete (ionChange)=\\\"search($event)\\\"></ion-searchbar>\\n        </ion-col>\\n    </ion-row>\\n    <ion-row *ngIf=\\\"!filteredItems.length\\\">\\n        <ion-col sizeLg=\\\"4\\\" *ngFor=\\\"let item of items\\\">\\n            <ion-card class=\\\"ion-padding-top app-card ion-margin-top ion-margin-bottom\\\">\\n                <ion-card-header>\\n                    <ion-card-title class=\\\"ion-text-capitalize\\\" color=\\\"primary\\\">{{item.title}}</ion-card-title>\\n                    <pre><code>{{item.command}}</code></pre>\\n                </ion-card-header>\\n                <ion-card-content>\\n                    {{item.description}}\\n                </ion-card-content>\\n            </ion-card>\\n        </ion-col>\\n    </ion-row>\\n\\n    <ion-row *ngIf=\\\"filteredItems.length\\\">\\n        <ion-col sizeLg=\\\"4\\\" *ngFor=\\\"let item of filteredItems\\\">\\n            <ion-card class=\\\"ion-padding-top app-card ion-margin-top ion-margin-bottom\\\">\\n                <ion-card-header>\\n                    <ion-card-title class=\\\"ion-text-capitalize\\\" color=\\\"primary\\\">{{item.title}}</ion-card-title>\\n                    <pre><code>{{item.command}}</code></pre>\\n                </ion-card-header>\\n                <ion-card-content>\\n                    {{item.description}}\\n                </ion-card-content>\\n            </ion-card>\\n        </ion-col>\\n    </ion-row>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ShufflerPage } from './shuffler.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ShufflerPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ShufflerPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ShufflerPageRoutingModule } from './shuffler-routing.module';\n\nimport { ShufflerPage } from './shuffler.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ShufflerPageRoutingModule\n  ],\n  declarations: [ShufflerPage]\n})\nexport class ShufflerPageModule {}\n","export default \".shuffler {\\n  --background: #f1f3f5;\\n}\\n.shuffler .header-row {\\n  padding-top: 5rem !important;\\n}\\n.shuffler .app-card {\\n  margin: 1rem;\\n  min-height: 200px;\\n  padding: 1rem;\\n}\\n.shuffler .app-card ion-card-title {\\n  font-size: 1rem;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9tYWMvUGhwc3Rvcm1Qcm9qZWN0cy9sZWFybi1naXQvc3JjL2FwcC9zaHVmZmxlci9zaHVmZmxlci5wYWdlLnNjc3MiLCJzcmMvYXBwL3NodWZmbGVyL3NodWZmbGVyLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLHFCQUFBO0FDQ0Y7QURBRTtFQUNFLDRCQUFBO0FDRUo7QURDRTtFQUNFLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGFBQUE7QUNDSjtBRENJO0VBQ0UsZUFBQTtBQ0NOIiwiZmlsZSI6InNyYy9hcHAvc2h1ZmZsZXIvc2h1ZmZsZXIucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNodWZmbGVyIHtcbiAgLS1iYWNrZ3JvdW5kOiAjZjFmM2Y1O1xuICAuaGVhZGVyLXJvdyB7XG4gICAgcGFkZGluZy10b3A6IDVyZW0gIWltcG9ydGFudDtcbiAgfVxuXG4gIC5hcHAtY2FyZCB7XG4gICAgbWFyZ2luOiAxcmVtO1xuICAgIG1pbi1oZWlnaHQ6IDIwMHB4O1xuICAgIHBhZGRpbmc6IDFyZW07XG5cbiAgICBpb24tY2FyZC10aXRsZXtcbiAgICAgIGZvbnQtc2l6ZTogMXJlbTtcbiAgICB9XG4gIH1cbn1cbiIsIi5zaHVmZmxlciB7XG4gIC0tYmFja2dyb3VuZDogI2YxZjNmNTtcbn1cbi5zaHVmZmxlciAuaGVhZGVyLXJvdyB7XG4gIHBhZGRpbmctdG9wOiA1cmVtICFpbXBvcnRhbnQ7XG59XG4uc2h1ZmZsZXIgLmFwcC1jYXJkIHtcbiAgbWFyZ2luOiAxcmVtO1xuICBtaW4taGVpZ2h0OiAyMDBweDtcbiAgcGFkZGluZzogMXJlbTtcbn1cbi5zaHVmZmxlciAuYXBwLWNhcmQgaW9uLWNhcmQtdGl0bGUge1xuICBmb250LXNpemU6IDFyZW07XG59Il19 */\";","import {Component, OnInit} from '@angular/core';\nimport {NavController} from '@ionic/angular';\n\n@Component({\n  selector: 'app-shuffler',\n  templateUrl: './shuffler.page.html',\n  styleUrls: ['./shuffler.page.scss'],\n})\n\nexport class ShufflerPage implements OnInit {\n  items: any = [\n    {\n      command: 'git init <directory>',\n      title: 'Initialize Git',\n      description: 'Create empty Git repo in specified directory. Run with no arguments to initialize the current directory as a git repository'\n    },\n    {\n      command: 'git clone <repo>',\n      title: 'Clone online Repo to Local device',\n      description: 'Clone repo located at <repo> onto local machine. Original repo can be located on the local filesystem or on a remote machine via HTTP or SSH.'\n    },\n    {\n      command: 'git config  user.name <name>',\n      title: 'Configure user name',\n      description: 'Define author name to be used for all commits in current repo. Devs commonly use --global flag to set config options for current user'\n    },\n    {\n      command: 'git commit -m  \"<message>\"',\n      title: 'Add message to denote your change',\n      description: 'Commit the staged snapshot, but instead of launching a text editor, use <message> as the commit message.'\n    },\n    {\n      command: 'git status',\n      title: 'Get your current application status',\n      description: 'List which files are staged, unstaged, and untracked.'\n    },\n    {\n      command: 'git log',\n      title: 'Get Logs of your git activities',\n      description: 'Display the entire commit history using the default format. For customization see additional options.'\n    },\n    {\n      command: 'git diff',\n      title: 'Get difference in working directory ',\n      description: 'Show unstaged changes between your index and working directory.'\n    }\n  ];\n  filteredItems = [];\n\n  constructor(public navCtrl: NavController) {\n  }\n\n  ngOnInit() {\n    console.log('got here to shuffler');\n  }\n\n  search(event) {\n\n    // Get the search terms from the input field\n    const searchTerm = event.target.value;\n    if (!searchTerm) {\n      this.filteredItems = [];\n    }\n\n    console.log('searchTerm', searchTerm);\n    // Tokenize the search terms and remove empty spaces\n    const tokens = searchTerm\n        .toLowerCase()\n        .split(' ')\n        .filter((token) => {\n          return token.trim() !== '';\n        });\n    console.log('tokens', tokens);\n\n    if (tokens.length) {\n      //  Create a regular expression of all the search terms\n      console.log('into filter block', tokens.length);\n\n      const searchTermRegex = new RegExp(tokens.join('|'), 'gim');\n      console.log('searchTermRegex', searchTermRegex);\n\n      const filteredData = this.items.filter((item) => {\n        // Create a string of all object values\n        let searchString = '';\n        for (const key in item) {\n          if (item.hasOwnProperty(key) && item[key] !== '') {\n            searchString += item[key].toString().toLowerCase().trim() + ' ';\n          }\n        }\n        // Return objects where a match with the search regex if found\n        return searchString.match(searchTermRegex);\n      });\n\n      this.filteredItems = filteredData;\n\n    }\n  }\n\n  onView(item) {\n    console.log('item', item);\n    // this.navCtrl.navigateForward(ViewerPage, {...item});\n\n  }\n\n}\n"]}